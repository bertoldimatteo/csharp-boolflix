// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using csharp_boolflix.Migrations;

#nullable disable

namespace csharp_boolflix.Migrations
{
    [DbContext(typeof(BoolflixContext))]
    partial class BoolflixContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("csharp_boolflix.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Compatible")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TvSerieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId")
                        .IsUnique()
                        .HasFilter("[FilmId] IS NOT NULL");

                    b.HasIndex("TvSerieId")
                        .IsUnique()
                        .HasFilter("[TvSerieId] IS NOT NULL");

                    b.ToTable("Model");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Model");
                });

            modelBuilder.Entity("Film", b =>
                {
                    b.HasBaseType("csharp_boolflix.Models.Model");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Film");
                });

            modelBuilder.Entity("TvSerie", b =>
                {
                    b.HasBaseType("csharp_boolflix.Models.Model");

                    b.Property<int>("Seasons")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("TvSerie");
                });

            modelBuilder.Entity("csharp_boolflix.Models.Model", b =>
                {
                    b.HasOne("Film", "Film")
                        .WithOne("Model")
                        .HasForeignKey("csharp_boolflix.Models.Model", "FilmId");

                    b.HasOne("TvSerie", "TvSerie")
                        .WithOne("Model")
                        .HasForeignKey("csharp_boolflix.Models.Model", "TvSerieId");

                    b.Navigation("Film");

                    b.Navigation("TvSerie");
                });

            modelBuilder.Entity("Film", b =>
                {
                    b.Navigation("Model")
                        .IsRequired();
                });

            modelBuilder.Entity("TvSerie", b =>
                {
                    b.Navigation("Model")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
